{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Login/Login.module.scss","components/PasswordRecovery/Password-recovery.module.scss","components/EnterNewPassword/Enter-new-password.module.scss","commonComponents/SuperInputText/SuperInputText.module.scss","commonComponents/SuperButton/SuperButton.module.scss","common/InputContainer/InputContainer.module.scss","common/HeaderEnterApp/HeaderEnterApp.module.scss","common/BlueButton/BlueButton.module.scss","common/Preloader/Preloader.module.scss","components/Error404/Error404.module.scss","components/Registration/Registration.module.scss","commonComponents/SuperCheckbox/SuperCheckbox.tsx","commonComponents/SuperButton/SuperButton.tsx","commonComponents/SuperInputText/SuperInputText.tsx","components/TestComponents/Test-components.tsx","api/api.ts","components/Login/login-reducer.ts","common/InputContainer/InputContainer.tsx","common/validation/EmailValidation.ts","common/HeaderEnterApp/HeaderEnterApp.tsx","media/loadings/loadingBtn.svg","common/Preloader/Preloader.tsx","common/BlueButton/BlueButton.tsx","components/Login/Login.tsx","components/Profile/Profile.tsx","components/Error404/Error404.tsx","components/EnterNewPassword/enter-new-password-api.ts","components/EnterNewPassword/enter-new-password-reducer.ts","media/password/no-view.svg","media/password/view.svg","components/EnterNewPassword/Enter-new-password.tsx","components/PasswordRecovery/password-recovery-api.ts","components/PasswordRecovery/password-recovery-reducer.ts","components/PasswordRecovery/Password-recovery.tsx","components/Registration/RegistrationAPI.ts","components/Registration/registration-reducer.ts","components/Registration/Registration.tsx","components/Navbar/Navbar.tsx","media/password/checkEmail.svg","components/PasswordRecovery/ChekEmail.tsx","App.tsx","reportWebVitals.ts","components/Profile/profile-reducer.ts","state/redux-store.ts","index.tsx"],"names":["module","exports","SuperCheckbox","type","onChange","onChangeChecked","className","children","spanClassName","restProps","finalInputClassName","s","checkbox","e","currentTarget","checked","SuperButton","red","finalClassName","default","btn","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","inputStyle","value","key","errorSpan","TestComponents","instance","axios","create","withCredentials","baseURL","loginAPI","email","password","rememberMe","post","initialStateLogin","_id","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","loadingRequest","logIn","payload","incorrectDataLogIn","InputContainer","props","emailPasswordContainer","inputTitle","title","typeInput","changeValue","placeholder","onBlur","errorEmailPasswordMessage","errorMessage","emailValidation","test","HeaderEnterApp","logo","Preloader","st","PreloaderContainer","alt","src","loadingProgress","BlueButton","blueBtn","onClick","actionClick","disabled","loadingStatus","disabledBtnSubmit","Login","useState","emailValue","setEmailValue","passwordValue","setPasswordValue","dispatch","useDispatch","useSelector","state","login","isLogIn","passwordTest","errorEmailMessage","setErrorEmailMessage","errorPasswordMessage","setErrorPasswordMessage","to","authPageContainer","emailPasswordLoginContainer","forgotPasswordBtn","btnFooterLoginContainer","errorMessageContainer","a","response","userData","data","message","loginUserTC","DifferentAccountBtn","signUpBtn","Profile","Error404","styles","pageNotFound","SetNewPasswordAPI","setNewPassword","resetPasswordToken","initialStateSetNewPassword","loading","success","setLoading","setSuccess","EnterNewPassword","setPassword","showPassword","setShowPassword","savePassword","setSavePassword","setError","disabledButton","setDisabledButton","token","useParams","buttonClassName","disable","container","header","event","length","validatePassword","noView","view","passwordControl","textAction","then","res","console","log","catch","finally","setNewPasswordThunk","PasswordRecoveryAPI","forgot","from","initialStatePasswordRecovery","PasswordRecovery","setEmail","sendEmail","setSendEmail","sendLetter","passwordRecoveryThunk","textRememberPassword","activeClassName","authAPI","initialStateRegistration","isRegistration","Registration","checkPassword","setCheckPassword","showCheckPassword","setShowCheckPassword","registration","main","registrationContainer","inputFields","inputName","errorContainer","btnCancel","window","history","go","btnRegister","setRegistrationTC","Navbar","nav","item","activeLink","active","CheckEmail","containerCheckEmail","checkEmail","textActionCheckEmail","App","path","render","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateProfile","rootReducer","combineReducers","action","newPassword","profile","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.146c5fe2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__XYmco\",\"item\":\"Navbar_item__R8R3x\",\"activeLink\":\"Navbar_activeLink__2U2YF\",\"tab_friend\":\"Navbar_tab_friend__6r7aV\",\"title_friend\":\"Navbar_title_friend__3h1mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPageContainer\":\"Login_authPageContainer__awFxT\",\"emailPasswordLoginContainer\":\"Login_emailPasswordLoginContainer__2Ha59\",\"forgotPasswordBtn\":\"Login_forgotPasswordBtn__3Q0_u\",\"btnFooterLoginContainer\":\"Login_btnFooterLoginContainer__1aPkJ\",\"errorMessageContainer\":\"Login_errorMessageContainer__2TJ0L\",\"DifferentAccountBtn\":\"Login_DifferentAccountBtn__2rMVb\",\"signUpBtn\":\"Login_signUpBtn__2REAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textAction\":\"Password-recovery_textAction__2_o8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Enter-new-password_container__3ihvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__39qvn\",\"error\":\"SuperInputText_error__sDPmV\",\"errorSpan\":\"SuperInputText_errorSpan__2T4ih\",\"inputStyle\":\"SuperInputText_inputStyle__1IK7e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1hgXx\",\"btn\":\"SuperButton_btn__1yAey\",\"red\":\"SuperButton_red__36IVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emailPasswordContainer\":\"InputContainer_emailPasswordContainer__14dmH\",\"inputTitle\":\"InputContainer_inputTitle__35UQl\",\"errorEmailPasswordMessage\":\"InputContainer_errorEmailPasswordMessage__2xtgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"HeaderEnterApp_logo__25680\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blueBtn\":\"BlueButton_blueBtn__2fW4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PreloaderContainer\":\"Preloader_PreloaderContainer__16Gnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNotFound\":\"Error404_pageNotFound__2iKlI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Registration_main__1F0kF\",\"registrationContainer\":\"Registration_registrationContainer__1rPK5\",\"logo\":\"Registration_logo__3NqB7\",\"inputFields\":\"Registration_inputFields__2ply4\",\"inputName\":\"Registration_inputName__Hr6Qt\",\"password\":\"Registration_password__2LZCU\",\"passwordControl\":\"Registration_passwordControl__1ezcw\",\"errorContainer\":\"Registration_errorContainer__1LH7c\",\"errorMessage\":\"Registration_errorMessage__2n6s2\",\"btn\":\"Registration_btn__o97o-\",\"btnCancel\":\"Registration_btnCancel__uljqN\",\"btnRegister\":\"Registration_btnRegister__29Dnh\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.scss'\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={restProps.checked}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    )\r\n}\r\n\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.scss'\r\n\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nexport const SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={`${finalClassName} ${s.btn}`}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.scss'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? s.errorInput : ''} ${s.inputStyle} ${className}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {<span className={`${finalSpanClassName} ${s.errorSpan}`}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {SuperCheckbox} from \"../../commonComponents/SuperCheckbox/SuperCheckbox\";\r\nimport {SuperButton} from \"../../commonComponents/SuperButton/SuperButton\";\r\nimport {SuperInputText} from \"../../commonComponents/SuperInputText/SuperInputText\";\r\n\r\nexport const TestComponents = () => {\r\n    return (\r\n        <div>\r\n            <SuperCheckbox />\r\n            <SuperButton/>\r\n            <SuperInputText />\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\nexport type responseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\nexport const loginAPI = {\r\n    logIn(email: string, password: string, rememberMe: boolean = false) {\r\n        return instance.post<responseType>('auth/login', {email, password, rememberMe})\r\n    }\r\n}","import {loginAPI, responseType} from \"../../api/api\";\r\nimport {AppThunkType} from \"../../state/redux-store\";\r\n\r\nconst initialStateLogin: initialLoginType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: null,\r\n    created: null,\r\n    updated: null,\r\n    isAdmin: false,\r\n    verified: false,\r\n    rememberMe: false,\r\n    error: null,\r\n    loadingRequest: false,\r\n    logIn: false\r\n}\r\n\r\nexport const loginReducer = (state: initialLoginType = initialStateLogin, action: actionsLoginType) => {\r\n    switch (action.type) {\r\n        case \"LOGIN/LOGIN-USER\":\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN/LOADING-REQUEST':\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN/LOG-IN':\r\n            return {...state, ...action.payload}\r\n        case 'LOGIN/INCORRECT-DATA-LOG-IN':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actionC\r\nconst loginUser = (userData: responseType) => {\r\n    return {\r\n        type: 'LOGIN/LOGIN-USER',\r\n        payload: {...userData}\r\n    }\r\n}\r\nconst loadingRequest = (loadingRequest: boolean) => {\r\n    return {\r\n        type: 'LOGIN/LOADING-REQUEST',\r\n        payload: {loadingRequest}\r\n    }\r\n}\r\nconst logIn = (logIn: boolean) => {\r\n    return {\r\n        type: 'LOGIN/LOG-IN',\r\n        payload: {logIn}\r\n    }\r\n}\r\nexport const incorrectDataLogIn = (error: string) => {\r\n    return {\r\n        type: 'LOGIN/INCORRECT-DATA-LOG-IN',\r\n        payload: {error}\r\n    }\r\n}\r\n\r\n//thunkC\r\nexport const loginUserTC = (emailValue: string, passwordValue: string): AppThunkType => async (dispatch) => {\r\n    dispatch(loadingRequest(true))\r\n\r\n    try {\r\n        const response = await loginAPI.logIn(emailValue, passwordValue)\r\n        dispatch(loginUser(response.data))\r\n        dispatch(logIn(true))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        dispatch(incorrectDataLogIn(error))\r\n    } finally {\r\n        dispatch(loadingRequest(false))\r\n    }\r\n}\r\n\r\n//types\r\nexport type initialLoginType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar: string\r\n    publicCardPacksCount: number | null\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error: string | null\r\n    loadingRequest: boolean\r\n    logIn: boolean\r\n}\r\nexport type actionsLoginType = ReturnType<typeof loginUser>\r\n    | ReturnType<typeof loadingRequest>\r\n    | ReturnType<typeof logIn>\r\n    | ReturnType<typeof incorrectDataLogIn>","import s from \"./InputContainer.module.scss\";\r\nimport React, {ChangeEvent, FocusEvent} from \"react\";\r\n\r\ntype InputContainerPropsType = {\r\n    title?: string\r\n    value?: string\r\n    changeValue: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    errorMessage: string\r\n    typeInput: string\r\n    placeholder?: string\r\n    onBlur?: (e: FocusEvent<HTMLInputElement>) => void\r\n}\r\nexport const InputContainer = (props: InputContainerPropsType) => {\r\n    return (\r\n        <label className={s.emailPasswordContainer}>\r\n            <span className={s.inputTitle}>{props.title}</span>\r\n            <input\r\n                type={props.typeInput}\r\n                value={props.value}\r\n                onChange={props.changeValue}\r\n                placeholder={props.placeholder}\r\n                onBlur={props.onBlur}\r\n            />\r\n            <span className={s.errorEmailPasswordMessage}>{props.errorMessage}</span>\r\n        </label>\r\n    )\r\n}","export const emailValidation = (value: string) => {\r\n    return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n}","import s from \"./HeaderEnterApp.module.scss\";\r\nimport React from \"react\";\r\n\r\ntype HeaderEnterAppType = {\r\n    title?: string\r\n}\r\nexport const HeaderEnterApp = ({title}: HeaderEnterAppType) => {\r\n    return (\r\n        <div>\r\n            <div className={s.logo}>It-incubator</div>\r\n            <h1>{title}</h1>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/loadingBtn.8c4b4840.svg\";","import React from \"react\";\r\nimport loadingProgress from '../../media/loadings/loadingBtn.svg'\r\nimport st from './Preloader.module.scss'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={st.PreloaderContainer}>\r\n            <img alt={'preloader'} src={loadingProgress} />\r\n        </div>\r\n    )\r\n}","import s from \"./BlueButton.module.scss\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\ntype BlueButton = {\r\n    actionClick: () => void\r\n    loadingStatus?: boolean\r\n    disabledBtnSubmit: boolean\r\n    title: string\r\n}\r\n\r\nexport const BlueButton = (props: BlueButton) => {\r\n    return (\r\n        <button className={s.blueBtn} onClick={props.actionClick}\r\n                disabled={props.loadingStatus || props.disabledBtnSubmit}>{props.loadingStatus ? <Preloader/> : props.title}</button>\r\n    )\r\n}","import React, {ChangeEvent, useRef, useState} from \"react\";\r\nimport s from './Login.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {incorrectDataLogIn, loginUserTC} from \"./login-reducer\";\r\nimport {AppStateType} from \"../../state/redux-store\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {InputContainer} from \"../../common/InputContainer/InputContainer\";\r\nimport {emailValidation} from \"../../common/validation/EmailValidation\";\r\nimport {HeaderEnterApp} from \"../../common/HeaderEnterApp/HeaderEnterApp\";\r\nimport {BlueButton} from \"../../common/BlueButton/BlueButton\";\r\n\r\nexport const Login = () => {\r\n    const [emailValue, setEmailValue] = useState<string>('')\r\n    const [passwordValue, setPasswordValue] = useState<string>('')\r\n\r\n    const dispatch = useDispatch()\r\n    const loadingStatus = useSelector<AppStateType, boolean>(state => state.login.loadingRequest)\r\n    const isLogIn = useSelector<AppStateType, boolean>(state => state.login.logIn)\r\n    const errorMessage = useSelector<AppStateType, null | string>(state => state.login.error)\r\n\r\n    const passwordTest = /[0-9a-zA-Z!@#$%^&*]{8,}/.test(passwordValue)\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string>('')\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string>('')\r\n\r\n    const changeEmailValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(e.currentTarget.value)\r\n        setErrorEmailMessage('')\r\n        errorMessage && dispatch(incorrectDataLogIn(''))\r\n    }\r\n    const changePasswordValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordValue(e.currentTarget.value)\r\n        errorMessage && dispatch(incorrectDataLogIn(''))\r\n        setErrorPasswordMessage('')\r\n    }\r\n\r\n    const checkLoginUser = () => {\r\n        if (!emailValidation(emailValue)) {\r\n            setErrorEmailMessage('Incorrect email')\r\n        } else if (!passwordTest) {\r\n            setErrorPasswordMessage('Minimum 8 characters')\r\n        } else {\r\n            dispatch(loginUserTC(emailValue, passwordValue))\r\n        }\r\n    }\r\n\r\n    if (isLogIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    const disabledBtnSubmit = !emailValue || !passwordValue\r\n\r\n    return (\r\n        <div className={s.authPageContainer}>\r\n            <HeaderEnterApp title={'Sign In'}/>\r\n\r\n            <div className={s.emailPasswordLoginContainer}>\r\n                <InputContainer\r\n                    title={'email'}\r\n                    typeInput={'email'}\r\n                    value={emailValue}\r\n                    changeValue={changeEmailValue}\r\n                    errorMessage={errorEmailMessage}\r\n                />\r\n                <InputContainer\r\n                    title={'password'}\r\n                    typeInput={'password'}\r\n                    value={passwordValue}\r\n                    changeValue={changePasswordValue}\r\n                    errorMessage={errorPasswordMessage}\r\n                />\r\n\r\n                <div className={s.forgotPasswordBtn}>\r\n                    <a onClick={() => {\r\n                    }}>Forgot Password</a>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.btnFooterLoginContainer}>\r\n                <span className={s.errorMessageContainer}>{errorMessage}</span>\r\n                <BlueButton actionClick={checkLoginUser}\r\n                            disabledBtnSubmit={disabledBtnSubmit}\r\n                            loadingStatus={loadingStatus}\r\n                            title={'login'}\r\n                />\r\n                <button className={s.DifferentAccountBtn}>Don't have an account</button>\r\n                <button className={s.signUpBtn}>Sing Up</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>Profile</div>\r\n    )\r\n}","import React from \"react\";\r\nimport styles from './Error404.module.scss'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={styles.pageNotFound}>404</div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\n// export const baseURL = \"https://fp-cards-back-2.herokuapp.com/2.0/\"\r\nexport const baseURL = \"https://neko-back.herokuapp.com/2.0/\"\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nexport type SetNewPasswordDataType = {\r\n    info: string\r\n    error: string;\r\n}\r\n\r\nexport const SetNewPasswordAPI = {\r\n    setNewPassword: async (password: string, resetPasswordToken: string) => {\r\n        const response = await instance.post<SetNewPasswordDataType>(\"/auth/set-new-password\", {\r\n            password,\r\n            resetPasswordToken,\r\n            });\r\n        return response.data;\r\n    },\r\n};\r\n\r\n\r\n\r\n","import { AxiosError } from \"axios\";\r\nimport {AppThunkType} from \"../../state/redux-store\";\r\nimport {SetNewPasswordAPI} from \"./enter-new-password-api\";\r\nimport {PasswordRecoveryAPI} from \"../PasswordRecovery/password-recovery-api\";\r\n\r\nconst initialStateSetNewPassword = {\r\n    error: '',\r\n    loading: false,\r\n    success: false,\r\n}\r\n\r\n//types\r\nexport type initialSetNewPasswordType = typeof initialStateSetNewPassword\r\n\r\nconst setError = (error: string) => ({type: \"set-new-password/SET_ERROR\", error} as const)\r\nconst setLoading = (loading: boolean) => ({type: \"set-new-password/SET_LOADING\", loading} as const)\r\nconst setSuccess = (success: boolean) => ({type: \"set-new-password/SET_SUCCESS\", success} as const)\r\n\r\nexport type actionsSetNewPasswordType = ReturnType<typeof setError> | ReturnType<typeof setLoading> | ReturnType<typeof setSuccess>\r\n\r\nexport const setNewPasswordReducer = (state: initialSetNewPasswordType = initialStateSetNewPassword, action: actionsSetNewPasswordType): initialSetNewPasswordType => {\r\n    switch (action.type) {\r\n        case \"set-new-password/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"set-new-password/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"set-new-password/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setNewPasswordThunk = (password: string, token: string): AppThunkType => async (\r\n    dispatch) => {\r\n    dispatch(setLoading(true));\r\n    SetNewPasswordAPI.setNewPassword(password, token)\r\n        .then(res => {\r\n            if (!res.error) {\r\n                console.log(res.error)\r\n            } else {\r\n                console.log(\"Not errors\")\r\n                dispatch(setSuccess(true))\r\n            }\r\n        })\r\n        .catch((error: AxiosError) => {\r\n            console.log(error)\r\n            dispatch(setSuccess(false))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoading(false))\r\n        })\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/no-view.ef3570e6.svg\";","export default __webpack_public_path__ + \"static/media/view.bc05a0cb.svg\";","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport styles from './Enter-new-password.module.scss'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {setNewPasswordThunk} from \"./enter-new-password-reducer\";\r\nimport noView from \"../../media/password/no-view.svg\"\r\nimport view from \"../../media/password/view.svg\"\r\n\r\nexport const EnterNewPassword = () => {\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n    const [savePassword, setSavePassword] = useState<boolean>(false)\r\n    const [error, setError] = useState<string>(\"\")\r\n    const [disabledButton, setDisabledButton] = useState<boolean>(true)\r\n    const { token } = useParams<{token: string}>();\r\n    const dispatch = useDispatch()\r\n    const setNewPassword = () => {\r\n        dispatch(setNewPasswordThunk(password, token))\r\n        setSavePassword(true)\r\n    }\r\n\r\n    const inputPassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n        setError(\"\")\r\n        if (event.currentTarget.value.length <= 4) {\r\n            setDisabledButton(true)\r\n        } else {\r\n            setDisabledButton(false)\r\n        }\r\n    }\r\n\r\n    const validatePassword = (password: string) => {\r\n        if (password.length <= 4) {\r\n            setError(\"Password must be more than 4 characters.\")\r\n            setDisabledButton(true)\r\n        }\r\n    }\r\n\r\n    if (savePassword) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    const buttonClassName = disabledButton ? `${styles.disable}` : ''\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div><h1 className={styles.header}>It-incubator</h1></div>\r\n            <h2 className={styles.header}>Create new password</h2>\r\n            {/*<input type=\"password\" placeholder={'Password'} onChange={inputPassword} />*/}\r\n            <div className={styles.password}>\r\n                <label>\r\n                    <input onChange={inputPassword} onBlur={() => {validatePassword(password)}} type={showPassword? 'text' : 'password'}/>\r\n                    <img alt={'your password'} src={showPassword? noView : view}\r\n                         className={styles.passwordControl} onClick={()=>{setShowPassword(!showPassword)}}/>\r\n                    <div className={styles.error}><label>{error}</label></div>\r\n                </label>\r\n            </div>\r\n            <p className={styles.textAction}>Create new password and we will send you further instructions to email</p>\r\n            <button className={buttonClassName} disabled={disabledButton} onClick={setNewPassword}>Create new password</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\n// export const baseURL = \"https://neko-back.herokuapp.com/2.0/\"\r\n// export const baseURL = \"https://fp-cards-back-2.herokuapp.com/2.0/\"\r\nexport const baseURL = \"https://neko-back.herokuapp.com/2.0/\"\r\n\r\nexport const instance = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\nexport type PasswordRecoveryDataType = {\r\n    error: string;\r\n}\r\n\r\nexport const PasswordRecoveryAPI = {\r\n    forgot: async (email: string) => {\r\n        const response = await instance.post<PasswordRecoveryDataType>(\"/auth/forgot\", {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `\r\n<div style=\"background-color: lime; padding: 15px\">\r\npassword recovery link: \r\n<a href='http://localhost:3000/learning-cards#/new-password/$token$'>link</a>\r\n</div>`\r\n        });\r\n        return response.data;\r\n    },\r\n};","import { AxiosError } from \"axios\";\r\nimport {AppThunkType} from \"../../state/redux-store\";\r\nimport {PasswordRecoveryAPI} from \"./password-recovery-api\";\r\n\r\nconst initialStatePasswordRecovery = {\r\n    error: '',\r\n    loading: false,\r\n    success: false,\r\n}\r\n\r\n//types\r\nexport type initialPasswordRecoveryType = typeof initialStatePasswordRecovery\r\n\r\nconst setError = (error: string) => ({type: \"password-recovery/SET_ERROR\", error} as const)\r\nconst setLoading = (loading: boolean) => ({type: \"password-recovery/SET_LOADING\", loading} as const)\r\nconst setSuccess = (success: boolean) => ({type: \"password-recovery/SET_SUCCESS\", success} as const)\r\n\r\nexport type actionsPasswordRecoveryType = ReturnType<typeof setError> | ReturnType<typeof setLoading> | ReturnType<typeof setSuccess>\r\n\r\nexport const passwordRecoveryReducer = (state: initialPasswordRecoveryType = initialStatePasswordRecovery, action: actionsPasswordRecoveryType): initialPasswordRecoveryType => {\r\n    switch (action.type) {\r\n        case \"password-recovery/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"password-recovery/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case \"password-recovery/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const passwordRecoveryThunk = (email: string = \"bovkunovichmarinacv@gmail.com\"): AppThunkType => async (\r\n    dispatch) => {\r\n    dispatch(setLoading(true));\r\n    PasswordRecoveryAPI.forgot(email)\r\n        .then(res => {\r\n            if (!res.error) {\r\n                console.log(res.error)\r\n            } else {\r\n                console.log(\"Not errors\")\r\n                dispatch(setSuccess(true))\r\n            }\r\n        })\r\n        .catch((error: AxiosError) => {\r\n            console.log(error)\r\n            dispatch(setSuccess(false))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoading(false))\r\n        })\r\n};\r\n\r\n","import React, {ChangeEvent, FocusEvent, useState} from \"react\";\r\nimport st from './Password-recovery.module.scss'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {passwordRecoveryThunk} from \"./password-recovery-reducer\";\r\n\r\nimport s from \"../Login/Login.module.scss\";\r\nimport {InputContainer} from \"../../common/InputContainer/InputContainer\";\r\nimport {emailValidation} from \"../../common/validation/EmailValidation\";\r\nimport {HeaderEnterApp} from \"../../common/HeaderEnterApp/HeaderEnterApp\";\r\nimport {BlueButton} from \"../../common/BlueButton/BlueButton\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    const [email, setEmail] = useState<string>('bovkunovichmarinacv@gmail.com')\r\n    const [sendEmail, setSendEmail] = useState<boolean>(false)\r\n    const [error, setError] = useState<string>('')\r\n    const [disabledButton, setDisabledButton] = useState<boolean>(true)\r\n    // const [emailValue, setEmailValue] = useState<string>('')\r\n    const disabledBtnSubmit = !email\r\n    const dispatch = useDispatch()\r\n    const sendLetter = () => {\r\n        dispatch(passwordRecoveryThunk(email))\r\n        setSendEmail(true)\r\n    }\r\n\r\n    const inputEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n        if (emailValidation(event.currentTarget.value)) {\r\n            setError(\"\")\r\n            setDisabledButton(false)\r\n        }\r\n    }\r\n\r\n    const checkEmailOnBlur = (e: FocusEvent<HTMLInputElement>) => {\r\n        if (emailValidation(e.currentTarget.value)) {\r\n            setError(\"\")\r\n            setDisabledButton(false)\r\n        } else {\r\n            setError(\"Incorrect email\")\r\n            setDisabledButton(true)\r\n        }\r\n    }\r\n\r\n    if (sendEmail) {\r\n        return <Redirect to={`/password-recovery-check-email/${email}`} />\r\n    }\r\n\r\n    const buttonClassName = disabledButton ? `${st.disable}` : ''\r\n\r\n    return (\r\n        <div className={s.authPageContainer}>\r\n            <HeaderEnterApp title={'Forgot your password?'}/>\r\n            <InputContainer\r\n                placeholder={'Email'}\r\n                changeValue={inputEmail}\r\n                errorMessage={error}\r\n                typeInput={'email'}\r\n                onBlur={checkEmailOnBlur}\r\n                value={email}\r\n            />\r\n            <p className={st.textAction}>Enter your email address and we will send you further instructions</p>\r\n\r\n            <BlueButton\r\n                title={'Send Instructions'}\r\n                actionClick={sendLetter}\r\n                disabledBtnSubmit={disabledBtnSubmit}\r\n                // loadingStatus={}\r\n            />\r\n            <button className={buttonClassName} onClick={sendLetter}>Send Instructions</button>\r\n            <p className={st.textRememberPassword}>Did you remember your password?</p>\r\n            <NavLink to=\"/login\" activeClassName={st.login}>Try logging in</NavLink>\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\ntype responseType={\r\n    addedUser: addedUserType\r\n    error?: string\r\n}\r\n\r\ntype addedUserType={\r\n    _id: string,\r\n    email: string,\r\n    rememberMe: boolean,\r\n    isAdmin: boolean,\r\n    name: string,\r\n    verified: boolean,\r\n    publicCardPacksCount: 0,\r\n    created: string,\r\n    updated: string,\r\n    __v: number\r\n}\r\n\r\nexport const authAPI={\r\n    register(email: string, password: string){\r\n        return instance.post<responseType>('auth/register', {email, password})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"./RegistrationAPI\";\r\nimport {AppThunkType} from \"../../state/redux-store\";\r\n\r\nconst initialStateRegistration = {\r\n    isRegistration: false\r\n}\r\n\r\n\r\nexport const registrationReducer = (state: initialRegistrationType = initialStateRegistration, action: actionsRegistrationType) => {\r\n    switch (action.type) {\r\n        case 'REGISTRATION/SET-REGISTRATION': {\r\n            return {\r\n                ...state, isRegistration: action.isRegistration\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//types\r\nexport type initialRegistrationType = {\r\n    isRegistration: boolean\r\n}\r\nexport type actionsRegistrationType = ReturnType<typeof setRegistrationAC>\r\n\r\nexport const setRegistrationAC = (isRegistration: boolean) => ({\r\n    type: 'REGISTRATION/SET-REGISTRATION', isRegistration\r\n} as const)\r\n\r\nexport const setRegistrationTC = (email: string, password: string):AppThunkType => (dispatch: Dispatch<actionsRegistrationType>) => {\r\n    authAPI.register(email, password)\r\n        .then(res => {\r\n            dispatch(setRegistrationAC(true))\r\n        })\r\n        .catch((res) => {\r\n            console.log(res.error)\r\n        })\r\n}\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './Registration.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../state/redux-store\";\r\nimport {setRegistrationTC} from \"./registration-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const Registration = () => {\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [checkPassword, setCheckPassword] = useState<string>('')\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n    const [showCheckPassword, setShowCheckPassword] = useState<boolean>(false)\r\n    const [error, setError] = useState<string | null>('')\r\n    const isRegistration = useSelector<AppStateType, boolean>((state => state.registration.isRegistration))\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(null)\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(null)\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setError(null)\r\n        setCheckPassword(e.currentTarget.value)\r\n    }\r\n\r\n    const onRegistration = () => {\r\n        if (email === '' || !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            setError('Invalid email address')\r\n        }\r\n        if (password.length < 8) {\r\n            setError('Password is less than 8 characters')\r\n        }\r\n        if (password === '' ) {\r\n            setError('Enter password')\r\n        }\r\n        if (password !== checkPassword) {\r\n            setError('Enter correct password')\r\n        }\r\n        else {\r\n            dispatch(setRegistrationTC(email, password))\r\n        }\r\n    }\r\n\r\n\r\n    if (isRegistration) {\r\n        return (\r\n            <Redirect to={'/login'}/>\r\n        )\r\n    }\r\n\r\n    const goBack = () => {\r\n        window.history.go(-1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.main}>\r\n            <div className={s.registrationContainer}>\r\n                <div className={s.logo}>It-incubator</div>\r\n                <h1>Sign Up</h1>\r\n                <div className={s.inputFields}>\r\n                    <label>\r\n                        <span className={s.inputName}>Email</span>\r\n                        <input value={email} onChange={onChangeEmail} />\r\n                    </label>\r\n                    <div className={s.password}>\r\n                        <label>\r\n                            <span className={s.inputName}>Password</span>\r\n                            <input value={password} onChange={onChangePassword} type={showPassword? 'text' : 'password'}/>\r\n                            <img alt={'your password'} src={showPassword? 'https://snipp.ru/demo/495/no-view.svg' : 'https://snipp.ru/demo/495/view.svg'}\r\n                                 className={s.passwordControl} onClick={()=>{setShowPassword(!showPassword)}}/>\r\n                        </label>\r\n                    </div>\r\n                    <div className={s.password}>\r\n                        <label>\r\n                            <span className={s.inputName}>Confirm password</span>\r\n                            <input value={checkPassword} onChange={onChangeCheckPassword} type={showCheckPassword? 'text' : 'password'}/>\r\n                            <img alt={'your password'} src={showCheckPassword? 'https://snipp.ru/demo/495/no-view.svg' : 'https://snipp.ru/demo/495/view.svg'}\r\n                                 className={s.passwordControl} onClick={()=>{setShowCheckPassword(!showCheckPassword)}}/>\r\n                        </label>\r\n                    </div>\r\n                    <div className={s.errorContainer}>\r\n                        {error && <div className={s.errorMessage}>{error}</div>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={s.btn}>\r\n                    <a className={s.btnCancel} onClick={goBack}>Cancel</a>\r\n                    <a className={s.btnRegister} onClick={onRegistration}>Register</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './Navbar.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/login\" activeClassName={s.activeLink}>login</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <NavLink to=\"/new-password\" activeClassName={s.activeLink}>new password</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={s.item}>\r\n                <NavLink to=\"/password-recovery\" activeClassName={s.activeLink}>password recovery</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <NavLink to=\"/password-recovery-check-email\" activeClassName={s.activeLink}>check email</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={s.item}>\r\n                <NavLink to=\"/registration\" activeClassName={s.activeLink}>registration</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/test-components\" activeClassName={s.activeLink}>test components</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/checkEmail.bc3a4042.svg\";","import React from \"react\";\r\nimport styles from './Password-recovery.module.scss'\r\nimport checkEmail from '../../media/password/checkEmail.svg'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const CheckEmail = () => {\r\n    const { email } = useParams<{email: string}>();\r\n    return (\r\n        <div className={styles.containerCheckEmail}>\r\n            <div><h1 className={styles.header}>It-incubator</h1></div>\r\n            <img src={checkEmail} alt=\"Check email\"/>\r\n            <h2 className={styles.header}>Check Email</h2>\r\n            <p className={styles.textActionCheckEmail}>We’ve sent an Email with instructions to {email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {TestComponents} from \"./components/TestComponents/Test-components\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Profile} from \"./components/Profile/Profile\";\r\nimport {Error404} from \"./components/Error404/Error404\";\r\nimport {EnterNewPassword} from \"./components/EnterNewPassword/Enter-new-password\";\r\nimport {PasswordRecovery} from \"./components/PasswordRecovery/Password-recovery\";\r\nimport {Registration} from \"./components/Registration/Registration\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {CheckEmail} from \"./components/PasswordRecovery/ChekEmail\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar />\r\n            <main className={'mainContainer'}>\r\n                <Switch>\r\n                    <Route path={'/learning-cards/'} render={() => <div>Hi!</div>}/>\r\n                    <Route exact path={'/login'} render={() => <Login/>}/>\r\n                    <Route exact path={'/profile'} render={() => <Profile/>}/>\r\n                    <Route path={'/new-password/:token'} render={() => <EnterNewPassword/>}/>\r\n                    <Route exact path={'/password-recovery'} render={() => <PasswordRecovery/>}/>\r\n                    <Route path={'/password-recovery-check-email/:email'} render={() => <CheckEmail/>}/>\r\n                    <Route exact path={'/registration'} render={() => <Registration/>}/>\r\n                    <Route exact path={'/test-components'} render={() => <TestComponents/>}/>\r\n                    <Route path={'*'} render={() => <Error404/>}/>\r\n                </Switch>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialStateProfile = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state: initialProfileType = initialStateProfile, action: actionsProfileType) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//types\r\nexport type initialProfileType = {\r\n\r\n}\r\nexport type actionsProfileType = any","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from 'redux-thunk';\r\nimport {actionsLoginType, loginReducer} from \"../components/Login/login-reducer\";\r\nimport {\r\n    actionsPasswordRecoveryType,\r\n    passwordRecoveryReducer\r\n} from \"../components/PasswordRecovery/password-recovery-reducer\";\r\nimport {\r\n    actionsSetNewPasswordType,\r\n    setNewPasswordReducer\r\n} from \"../components/EnterNewPassword/enter-new-password-reducer\";\r\nimport {actionsProfileType, profileReducer} from \"../components/Profile/profile-reducer\";\r\nimport {actionsRegistrationType, registrationReducer} from \"../components/Registration/registration-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    PasswordRecovery: passwordRecoveryReducer,\r\n    newPassword: setNewPasswordReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\ntype AppActionsType = actionsSetNewPasswordType\r\n    | actionsLoginType\r\n    | actionsPasswordRecoveryType\r\n    | actionsProfileType\r\n    | actionsRegistrationType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType,\r\n    AppStateType,\r\n    unknown,\r\n    AppActionsType>\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./state/redux-store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}